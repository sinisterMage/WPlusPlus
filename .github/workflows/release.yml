name: Build and Release Ingot CLI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  # ðŸ‘‡ This creates the GitHub release exactly once
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release (empty)
        uses: softprops/action-gh-release@v2
        with:
          files: "" # No files, just the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ðŸ‘‡ This builds binaries for each OS and uploads
  build-and-upload:
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [win-x64, linux-x64, osx-x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Publish CLI for ${{ matrix.os }}
        run: |
          dotnet publish IngotCLI/IngotCLI.csproj \
            -c Release \
            -r ${{ matrix.os }} \
            --self-contained true \
            /p:PublishSingleFile=true \
            /p:EnableCompressionInSingleFile=false \
            /p:DebugType=None \
            /p:DebugSymbols=false \
            -o output/${{ matrix.os }}

      - name: Rename binary to 'ingot'
        run: |
          cd output/${{ matrix.os }}
          if [[ "${{ matrix.os }}" == "win-x64" ]]; then
            mv IngotCLI.exe ingot.exe
          else
            mv IngotCLI ingot
          fi

      - name: Archive binaries
        run: |
          cd output/${{ matrix.os }}
          zip -r ../../ingot-${{ matrix.os }}.zip .

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ingot-${{ matrix.os }}.zip
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: 🦥 Ingot Release (Beta 1)

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build Ingot CLI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc

    steps:
      - name: 🧩 Checkout source
        uses: actions/checkout@v4

      - name: ⚙️ Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      # --- 🧠 LLVM Installation (per OS) ---
      - name: 🧠 Install LLVM (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y llvm-15-dev clang-15
          echo "LLVM_SYS_150_PREFIX=/usr/lib/llvm-15" >> $GITHUB_ENV

      - name: 🍎 Install LLVM (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install llvm@15
          echo "LLVM_SYS_150_PREFIX=$(brew --prefix llvm@15)" >> $GITHUB_ENV

      - name: 🪟 Install LLVM (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: |
          choco install llvm --version=15.0.7 -y
          echo "LLVM_SYS_150_PREFIX=C:\Program Files\LLVM" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      # --- 🧱 Build ---
      - name: 🧱 Build Ingot CLI
        run: |
          cd wpp-cli
          cargo build --release --target ${{ matrix.target }}

      # --- 📦 Package ---
      - name: 📦 Package binary
        run: |
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ingot-${{ matrix.target }}.zip ingot.exe
          else
            tar -czvf ingot-${{ matrix.target }}.tar.gz ingot
          fi
        shell: bash

      # --- 🚀 Upload artifact ---
      - name: 🚀 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ingot-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/ingot*.zip
            target/${{ matrix.target }}/release/ingot*.tar.gz

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout repo
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
